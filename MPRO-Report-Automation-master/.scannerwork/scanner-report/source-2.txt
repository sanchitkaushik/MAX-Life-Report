package com.maxlifeinsurance.mpro.config;

import java.util.Arrays;
import java.util.ResourceBundle;

import org.bson.Document;
import org.bson.codecs.configuration.CodecRegistries;
import org.bson.codecs.configuration.CodecRegistry;
import org.bson.codecs.pojo.PojoCodecProvider;

import com.amazonaws.services.lambda.runtime.Context;
import com.maxlifeinsurance.mpro.utils.Constants;
import com.mongodb.MongoClient;
import com.mongodb.MongoClientOptions;
import com.mongodb.MongoCredential;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;

/**
 * 
 * @author Qualtech This is common class used for connecting mongo db
 */
public class DbConfig {

	static ResourceBundle application = ResourceBundle.getBundle(Constants.APPLICATION);

	/**
	 * 
	 * @param dbName
	 * @param context
	 * @return MongoDatabase class object This method is used to connect mongoDb
	 */
	public MongoCollection<Document> getDbConnection(String dbName, Context context) {
		MongoCollection<Document> mongoCollection = null;
		try {
			context.getLogger().log("Getting connected with mongo DB ");
			int port = Integer.parseInt(application.getString(Constants.MONGO_PORT));
			CodecRegistry pojoCodecRegistry = CodecRegistries.fromRegistries(MongoClient.getDefaultCodecRegistry(), CodecRegistries.fromProviders(PojoCodecProvider.builder().automatic(true).build()));
			MongoCredential credential = MongoCredential.createCredential(application.getString(Constants.MONGO_USERNAME), application.getString(Constants.MONGODB_DBNAME), application.getString(Constants.MONGO_PASS).toCharArray());
			MongoClientOptions.Builder options = MongoClientOptions.builder();
			options.socketKeepAlive(true);
			MongoClient client = new MongoClient(new ServerAddress(application.getString(Constants.MONGO_IP), port), Arrays.asList(credential), options.build());
			MongoDatabase mongoDatabase = client.getDatabase(application.getString(Constants.MONGODB_DBNAME)).withCodecRegistry(pojoCodecRegistry);
			context.getLogger().log("DB connected successfully :: " + mongoDatabase.getName());
			mongoCollection = mongoDatabase.getCollection(application.getString(Constants.MONGO_COLLECTION)).withCodecRegistry(pojoCodecRegistry);
		} catch (Exception ex) {
			context.getLogger().log("Exception in getDbConnection method :: " + ex);
		}
		return mongoCollection;

	}

}
