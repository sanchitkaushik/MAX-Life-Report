package com.maxlifeinsurance.mpro.daoimpl;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.ResourceBundle;

import org.bson.Document;

import com.amazonaws.services.lambda.runtime.Context;
import com.maxlifeinsurance.mpro.config.DbConfig;
import com.maxlifeinsurance.mpro.dao.AxisLeadIdReportDao;
import com.maxlifeinsurance.mpro.dto.Proposal;
import com.maxlifeinsurance.mpro.utils.Queries;
import com.maxlifeinsurance.mpro.utils.StringConstants;
import com.mongodb.client.MongoCollection;

/**
 * 
 * @author Qualtech This class is dao layer for axis lead id report
 */
public class AxisLeadIdReportDaoImpl implements AxisLeadIdReportDao {

	static ResourceBundle res = ResourceBundle.getBundle("application");
	static String mongoDatabaseName = res.getString("mongoDatabaseName");
	static String mongoCollectionName = res.getString("mongoCollectionName");

	@Override
	public List<Proposal> getAxisLeadIdReportData(Context context) {
		List<Proposal> proposalDocuments = null;
		try {
			MongoCollection<Document> collection = new DbConfig().getDbConnection(mongoDatabaseName,context);
			
//          Below connectivity is used for testing in local env.
//			MongoCollection<Document> collection = new DbConfigForLocal().getDbConnection(mongoDatabaseName);
			
			context.getLogger().log("Fetching document from database");
			Calendar clr = Calendar.getInstance();
			clr.add(Calendar.DATE, -7);
			clr.add(Calendar.YEAR, -7);
			int year = clr.get(Calendar.YEAR);
			int month = clr.get(Calendar.MONTH);
			int day = clr.get(Calendar.DATE);
			Date date = new Date();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
			String dateInString = year + "/" + (month + 1) + "/" + (day + 1);
			date = sdf.parse(dateInString);
			
			Document projection = new Document();
			projection.append(Queries.POLICY_NUMBER, 1)
					  .append(Queries.BANCA_LEADID, 1)
					  .append(Queries.TRANSACTION_ID, 1)
					  .append(Queries.CREATED_DATE, 1)
					  .append(Queries.CHANNEL, 1);
			
			Document whereCondition = new Document();
			whereCondition.append(Queries.CHANNEL, StringConstants.CHANNEL_NAME)
			              .append(Queries.CREATED_DATE, new Document().append("$gte", date));
			
			proposalDocuments = collection.find(whereCondition, Proposal.class).projection(projection).into(new ArrayList<>());
			
			context.getLogger().log("Total record count is :: " +proposalDocuments.size());
			
		} catch (Exception ex) {
			ex.printStackTrace();
			context.getLogger().log("Exception occured in getAxisMproReportData while fetching data from mongo db :: " + ex);
		}
		return proposalDocuments;
	}
}
